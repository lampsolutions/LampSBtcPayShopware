<?xml version="1.0" encoding="UTF-8"?>
<project name="PHPMD" basedir=".">

    <!--
        Include local project properties.
    -->
    <property file="build.properties" />

    <!--
        Import common build targets
    -->
	<import file="${basedir}/setup/src/main/xml/base.xml" />

    <!--
        Hook that will be called after we have copied the project's library
        directory.

        Parameters:
            output.dir      Output directory for the temporary build tree.
            library.dir     The library directory in the temporary build tree.
    -->
    <target name="~copy-vendor-dir-after">
        <delete includeemptydirs="true">
            <fileset dir="${vendor.dir}/pdepend">
                <exclude name="pdepend/src/main/**" />
            </fileset>
        </delete>
    </target>

    <!--
        Hook method for copying files for the project's xyz archive format.

        Parameters:
            output.dir      Output directory for the temporary build tree.
    -->
    <target name="do-copy-files-for-xyz-archive">
        <move todir="${output.dir}/src/main/php">
            <fileset dir="${output.dir}/" includes="PHPMD/**/*.*" />
        </move>
        <copy todir="${output.dir}/src/main/resources/rulesets">
            <fileset dir="${commons.srcdir.resource}/rulesets" />
        </copy>
    </target>

    <!--
        We use the phar archive after hook to validate that a newly created
        phar archive works as expected.

        Parameters:
            ${-package:phar:filename}  Name of the created phar file.
    -->
    <target name="-phpmd:package:phar:after~hooked" extensionOf="-package:phar:after~hook">

        <echo message="Executing:" level="verbose" />
        <echo message="  ${-package:phar:filename} PHPMD/Rule text ${phpmd.rulesets}" level="verbose" />

        <exec dir="${commons.srcdir.php}"
              executable="${-package:phar:filename}" 
              failonerror="true">
              
            <arg value="PHPMD/Rule" />
            <arg value="text" />
            <arg value="${phpmd.rulesets}" />
        </exec>
    </target>

    <!--
        Executes the newly created and installed PEAR version of PHPMD.
    -->
    <target name="-phpmd:package:pear:after~hooked" extensionOf="-package:pear:after~hook">

        <echo message="Executing:" level="verbose" />
        <echo message="  phpmd PHPMD/Rule text ${phpmd.rulesets}" level="verbose" />

        <exec dir="${commons.srcdir.php}" 
              executable="${commons.executable.php}" 
              failonerror="true">

            <arg value="-d" />
            <arg value="include_path=${common-pear-root-dir}" />
            <arg value="${common-pear-bin-dir}/phpmd" />
            <arg value="PHPMD/Rule" />
            <arg value="text" />
            <arg value="${phpmd.rulesets}" />
        </exec>
    </target>

    <target name="-phpmd:deploy:after~hooked" extensionOf="-deploy:after~hook" if="release">

        <property name="project.web.release.dir" value="${project.web.root}/static.${project.uri}/php/${project.version}" />

        <exec dir="${commons:builddir}" executable="ssh" failonerror="true">
            <arg line="${remote.shell.credentials}" />
            <arg line="mkdir '${project.web.release.dir}'" />
        </exec>
        <exec dir="${commons:builddir}" executable="scp" failonerror="true">
            <arg line="dist/${project.name}-${project.version}.phar" />
            <arg line="${remote.shell.credentials}:${project.web.release.dir}/${project.name}.phar" />
        </exec>
        <exec dir="${commons:builddir}" executable="ssh" failonerror="true">
            <arg line="${remote.shell.credentials}" />
            <arg line="cd '${project.web.release.dir}/..' ; rm latest ; ln -s '${project.version}' latest" />
        </exec>

        <antcall target="site:deploy" />
    </target>

</project>
